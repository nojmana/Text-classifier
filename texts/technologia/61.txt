Korporacja Mitsubishi Electric, posiadająca 90 lat doświadczenia w zakresie dostarczania niezawodnych, wysokiej jakości innowacyjnych produktów w dziedzinie automatyki przemysłowej, produkcji, marketingu i sprzedaży urządzeń elektrycznych i elektronicznych. Programowalne sterowniki PLC, rozwiązania napędowe, roboty przemysłowe, panele dotykowe, wycinarki laserowe i sterownie CNC firmy Mitsubishi Electric zaliczają się do produktów najwydajniejszych na rynku i gwarantują sukcesy firmy już od ponad 30 lat.Od 1954 Finder pracował wyłącznie w zakresie przekaźników i timerów. Nasz wysoki stopień specjalizacji zaowocował ponad 10.000 różnych produktów w jednej z najszerszych dostępnych ofert. Firma szeroko się rozwija i inwestuje w przyszłość uzupełniając gamę swojego asortymentu. Prócz przekaźników oferuje rozwiązania przemysłu elektrycznego do zastosowań domowych jak i komercyjnych poprzez przekaźniki, urządzenia przeciwprzepięciowe, termostaty panelowe, zasilacze i liczniki energii.  Gama asortymentu obejmuje ponad 12 tysięcy produktów.WAGO jest producentem urządzeń automatyki przemysłowej i budynkowej oraz systemów połączeń dla elektrotechniki i elektroniki. Powstanie w 1951 roku firmy WAGO było wyrazem przekonania o słuszności obranego kierunku i stworzyło podwaliny pod dalszy rozwój technologii. Z czasem stała się ona standardem na całym świecie i teraz nie sposób wyobrazić sobie nowoczesnej instalacji elektrycznej czy systemu automatycznego sterowania bez wyrobów WAGO.Eaton Electric jest producentem najwyższej jakości automatyki przemysłowej, aparatury sygnalizacyjnej, łączeniowej, zabezpieczającej i instalacyjnej oraz systemów rozdziału energii niskiego napięcia. Międzynarodowe nagrody oraz certyfikaty są dowodem, iż produkty Eaton Electric odpowiadają najnowszym standardom bezpieczeństwa i wymaganiom jakości. Wszystkie nasze wyroby gwarantują długoletnie działanie.
Więcej wyników
Artykuł z serii: WebHMI - SCADA bez limitów i licencji w jednym urządzeniuOdwieczne walki programistów PLC znajdujących się między młotem (sterowniki PLC), a kowadłem (niedziałająca komunikacja) trwają. Niejeden programista poświęcił wiele czasu i nerwów konfigurując połączenia sieciowe i w momencie gdy już powinno działać… nie zadziałało. Mimo, że obecne oprogramowania inżynierskie znacznie ułatwiają procesy konfiguracji połączeń sieciowych i wymiany danych to bardzo często wkrada się jakiś mały błąd, którego odnalezienie może przyprawić o zawrót głowy. Dlatego chciałbym dołożyć do bazy wiedzy o komunikacji, swój krótki tutorial dotyczący konfiguracji połączenia ModBus TCP na sterowniku LOGO!8 w roli serwera. Być może przyda się on komuś, kto podobnie jak ja stanie przed zadaniem konfiguracji wymiany danych typu klient-serwer.W skład konfiguracji sprzętowej wchodzą trzy urządzenia: komputer, sterownik LOGO i urządzenie klienta ModBus TCP. Połączenia fizyczne zrealizowane zostały z użyciem przewodów Ethernet-owych, jak na ten protokół przystało. Następnie ważnym jest aby wszystkie urządzenia znalazły się w tej samej sieci i podsieci, gdyż w przeciwnym przypadku wykonanie połączenia będzie niemożliwe. Dla sterownika LOGO!8 proces ten można przeprowadzić na dwa sposoby:
Możemy przejść do utworzenia nowego projektu i konfiguracji połączenia. Otwieramy zakładkę Network Project i wybieramy File -> New -> Network Project (NWP). Dodajemy sterownik do naszego projektu wybierając AddNewDevice. Ja dysponuję sterownikiem LOGO w wersji FS4, dlatego taki wybieram w otwartym oknie. We właściwościach podajemy adres IP i maskę podsieci. Pole bramy (Default gateway) może pozostać puste. Wybór zatwierdzamy przyciskiem OK:Analogicznie musimy dodać urządzenie komunikujące się w standardzie Modbus TCP. Ponownie wybieramy Add New Device. Tym razem wybieramy urządzenie ModBus compatible device i analogicznie jak dla sterownika LOGO wpisujemy adres urządzenia, maskę podsieci i zatwierdzamy:Teraz wystarczy już połączyć te urządzenia wirtualnym przewodem.
UWAGA!
Klikamy na niebieski kwadrat reprezentujący złącze interfejsu Ethernet na urządzeniu klienta i przeciągamy do dowolnego portu serwera (sterownik LOGO).
Jeśli połączenie przeprowadzimy w przeciwnym kierunku urządzenia zamienią się rolami klient-serwer i komunikacja nie będzie możliwa. Nowo utworzone połączenie przyjmie kolor żółty.Do testów połączenia stworzyłem wręcz banalny program załączający wyjście Q1 gdy wartość flagi M1 wynosi 0 i na odwrót:I to by było na tyle konfiguracji w LOGO!SoftComfort. Wybieramy Tools -> Transfer -> PC->LOGO! by wgrać program na sterownik.Od tej chwili LOGO!8 jest serwerem Modbus TCP i można odczytywać z niego dane w tymże protokole. Do konfiguracji wymiany danych na drugim urządzeniu przydatna może być mała ściągawka w postaci tabeli adresacji zmiennych. Znajdziesz ją w Tools -> Select Hardware -> ModBus address space (wskazówka: jeśli opcja Select Hardware jest nieaktywna wystarczy, że klikniesz w obszarze roboczym programu aby ją aktywować)Jak widzisz w tabeli znajdują się bezpośrednie tłumaczenia adresów wewnętrznych sterownika na adresy w sieci ModBus wraz z opisem typów rejestrów.Według powyższej tabeli pamięć M znajduje się na rejestrach ModBus’owych od C8257 dla M1 do C8320 dla M64. Analogicznie rzecz ma się do innych rejestrów. Mam nadzieję że to zrozumiałe.Do testów połączenia jako urządzenie klienta wybrałem sterownik SCADA WebHMI, które spośród wielu protokołów może komunikować się również przez ModBus TCP jako klient ale może też być serwerem. Więcej o WebHMI przeczytasz tutaj i tutaj. Warto zwrócić uwagę, że od wersji 3.0 WebHMI ma całkowicie spolszczony interfejs.Oczywiście powyższa konfiguracja w LOGO!SoftComfort pozwoli na komunikację pomiędzy LOGO!8 a innym urządzeniem obsługującym funkcję klienta MODBUS TCP. Może to być sterownik PLC, panel HMI czy inna SCADA. Logujemy się do interfejsu WebHMI i przechodzimy zakładki Ustawienia -> Zmienne gdzie tworzymy nowe połączenie. Wypełniamy podstawowy formularz konfiguracyjny. Wpisujemy nazwę połączenia, wybieramy ModBus jako model urządzenia, ModBus TCP jako protokół i wpisujemy adres urządzenia. Ważną opcją jest ustawienie offsetu adresu na „1”. W przeciwnym przypadku wszystkie adresy będą przesunięte właśnie o tę wartość.Zgodnie z tablicą definiujemy dwie zmienne z naszego programu: M1 i Q1. Dla M1 adres wynosi C8257. Dodatkowo w zakładce Wartość zmieniamy typ zmiennej na Bit:Analogicznie postępujemy z zmienną Q1 dla której w polu Adres wpisujemy C8193. Działanie komunikacji możemy przetestować zmieniając wartość zmiennej M1. A samą zmienną wykorzystać później w wizualizacji SCADA.Jak widzisz uruchomienie komunikacji ModBus TCP na sterowniku LOGO! z użyciem oprogramowania LOGO!SoftComfort nie jest wcale takie trudne. Wystarczyło kilka kliknięć, a komunikacja działa aż miło. Dla rozpoczynających praktyczną zabawę z ModBus-em TCP taka dawka informacji może być nieocenionym źródłem wiedzy. Takiej dawki zabrakło mi, dlatego postanowiłem stworzyć ten tutorial, jak to mówią: dla potomnych.Dla zainteresowanych sterownikiem SCADA WebHMI odsyłam na stronę http://webhmi.pl – jak się przekonaliśmy jest to godne polecenia urządzenie, wywołujące pełen podziw zaraz przy pierwszym użytkowaniu. Kończąc ten artykuł zapraszam Was na film w którym pokazujemy jak połączyć LOGO!8 z WebHMI w protokole S7 Communication oraz niektóre możliwości WebHMI.Zobacz też jak podłączyć WebHMI ze sterownikiem PLC WAGO PFC200 w protokole Modbus TCP.(function(d, s, id) {
var js, fjs = d.getElementsByTagName(s)[0];
if (d.getElementById(id)) return;
js = d.createElement(s); js.id = id;
js.src = 'https://connect.facebook.net/pl_PL/sdk.js#xfbml=1&version=v2.11&appId=1710048529245050';
fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk')); Dołącz do grupy 12 000 członków:
Automatyk Może WięcejDołącz do Projektu iAutomatyka.pl jako:
Automatyk, Integrator lub FirmaOdwiedza nas blisko 40 000 UU / m
Nazwa użytkownika lub e-mail


Hasło




Nie masz konta? Zarejestruj się

Enter your account data and we will send you a link to reset your password.	
Nazwa użytkownika lub e-mail



Przetwarzamy pliki... jeszcze chwilka…